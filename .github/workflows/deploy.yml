name: Deploy to Production

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: client/package-lock.json

      - name: Install dependencies
        run: |
          cd client
          npm ci

      - name: Run linter
        run: |
          cd client
          npm run lint

      - name: Run unit tests
        run: |
          cd client
          npm run test

      - name: Run E2E tests
        run: |
          cd client
          npx playwright install --with-deps
          npm run test:e2e

      - name: Upload test coverage
        uses: codecov/codecov-action@v3
        with:
          files: ./client/coverage/coverage-final.json
          flags: unittests
          name: codecov-umbrella

  build:
    name: Build Application
    runs-on: ubuntu-latest
    needs: test

    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: client/package-lock.json

      - name: Install dependencies
        run: |
          cd client
          npm ci

      - name: Build application
        run: |
          cd client
          npm run build
        env:
          NODE_ENV: production

      - name: Check build size
        run: |
          cd client
          du -sh dist/
          echo "Build size:"
          ls -lh dist/assets/

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dist
          path: client/dist
          retention-days: 7

  deploy-vercel:
    name: Deploy to Vercel
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'

    steps:
      - uses: actions/checkout@v3

      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: dist
          path: client/dist

      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v20
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          vercel-args: '--prod'
          working-directory: ./

  lighthouse:
    name: Lighthouse Performance
    runs-on: ubuntu-latest
    needs: deploy-vercel
    if: github.ref == 'refs/heads/main'

    steps:
      - uses: actions/checkout@v3

      - name: Run Lighthouse CI
        uses: treosh/lighthouse-ci-action@v9
        with:
          urls: |
            https://your-app.vercel.app
          uploadArtifacts: true
          temporaryPublicStorage: true

      - name: Comment PR with Lighthouse scores
        uses: actions/github-script@v6
        if: github.event_name == 'pull_request'
        with:
          script: |
            const fs = require('fs');
            const results = JSON.parse(fs.readFileSync('.lighthouseci/manifest.json'));
            // Add PR comment logic here

  notify:
    name: Notify on Slack
    runs-on: ubuntu-latest
    needs: [deploy-vercel]
    if: always() && github.ref == 'refs/heads/main'

    steps:
      - name: Send Slack notification
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          text: |
            Deployment ${{ job.status }}
            Branch: ${{ github.ref }}
            Commit: ${{ github.sha }}
          webhook_url: ${{ secrets.SLACK_WEBHOOK }}
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
